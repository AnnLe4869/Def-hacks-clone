interface Context {
  /**
   * Variables
   */

  // This one use the firebase.auth().currentUser and below are the minimal requirement
  user: {
    email: string;
    displayName: string;
    photoURL: string
  };

  // Indicate whether the data is fetching
  // Used to determine whether or not to display the spinning UI
  loading: boolean;

  // Used to alert user of an action, whether it's success or fail
  alert: {
    type: SuccessAlert | ErrorAlert;
    message: string;
  };

  // We fetch user's data on how much user has done
  // These two below must be fetched first to be display on /learn
  userProgress: [
    {
      id: Lesson_ID;
      dateComplete: string;
    }
  ];
  // The last lesson user has learned before leaved
  lastLesson: string;
  // All the courses
  courses: [
    {
      id: string;
      courseName: string;
      content: [{ id: string; lessonName: string; no: number }];
      // Ordinal number, indicate the position in line of the course, as one course must followed by another specific course
      no: number;
    }
  ];

  // This can be fetch in background as we don't immediately need it on /learn
  // In fact, we only fetch the lesson we need on-the-fly
  // i.e when user choose a lesson do we fetch it and push to this lessons variable
  lessons: [
    {
      id: string;
      lessonName: string;
      quizzes: [
        {
          id: string;
          question: string;
          options: [{ id: string; optionContent: string }];
          correctOption: string;
          explanation: string;
          no: number
        }
      ];
      instruction: string;
      practice: {
        code: string;
        test: string;
      };
      // Path to file to download
      files: string[];
    }
  ];

  /**
   * Function
   */

  // Set the user variable right after user log in and sign out
  // Which include userProgress and lastLesson
  // Not include initializing user variable though as this one is formed when user log in
  initializeUserData: () => void;
  // Set the userProgress and courses variable the first time user visit /learn
  // These should run only when user visit /learn for the first time
  initializeCourses: () => void;

  // Set the loading variable
  setLoading: (value: boolean) => void;
  // Fetch the data of one lesson, update lastLesson in firebase and push that into lessons variable
  // Return the lesson from firestore
  startLesson: (lessonId: string) => LessonData;
  // Toggle the done status of a lesson, basically update the userProgress variable
  completeLesson: (lessonId: string) => void;
  // Set the alert type and message
  setAlert: (type: ErrorAlert | SuccessAlert, message: string) => void;
  // Update the displayName and photoURL that don't need re-authenticate on firestore and local Context
  updateNonCriticalUserProfile: (displayName: string | null, photoURL: string | null) => void
  // Update the email and such that require re-authenticate on firestore and local Context
  updateCriticalUserProfile: (email: string | null) => void
  // Update last lesson, which we define to be the last lesson that user stay in for longer than 10 seconds
  updateLastLesson: (lessonId: string) => void
}

type ErrorAlert = string;
type SuccessAlert = string;
